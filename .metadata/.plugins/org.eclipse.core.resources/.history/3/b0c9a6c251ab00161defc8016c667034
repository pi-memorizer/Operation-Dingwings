import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.awt.image.BufferedImage;

import javax.swing.JFrame;

//BEHOLD KYLE'S REALM

public class IO extends JFrame
{
	long clock = System.currentTimeMillis();
	BufferedImage offscreenImg;
	Graphics2D offscreenG;
	int width;
	int height;
	
	public IO()
	{
		//Make sure the program actually quits when the window is closed: very important!
		addWindowListener(new WindowListener(){
			public void windowActivated(WindowEvent arg0) {}
			public void windowClosed(WindowEvent arg0) {}
			public void windowClosing(WindowEvent arg0) {
				System.exit(0);
			}
			public void windowDeactivated(WindowEvent arg0) {}
			public void windowDeiconified(WindowEvent arg0) {}
			public void windowIconified(WindowEvent arg0) {}
			public void windowOpened(WindowEvent arg0) {}});
		//Handle key presses
		addKeyListener(new KeyListener(){
			public void keyPressed(KeyEvent arg0) {
				try {
					int key = arg0.getKeyCode();
					if(key=='W'||key=='A'||key=='S'||key=='D')
					{
						if(System.currentTimeMillis()-clock>=Main.KEY_DELAY)
						{
							clock = System.currentTimeMillis();
							if(key=='W')
								Player.moveUp();
							if(key=='A')
								Player.moveLeft();
							if(key=='S')
								Player.moveDown();
							if(key=='D')
								Player.moveRight();
						}
					}
				} catch(Exception e) {}
			}
			public void keyReleased(KeyEvent arg0) {}
			public void keyTyped(KeyEvent arg0) {}});
		offscreenImg = new BufferedImage(Main.BLOCKS_LEFT*Main.BLOCK_WIDTH,Main.BLOCKS_UP*Main.BLOCK_WIDTH,BufferedImage.TYPE_INT_RGB);
		offscreenG = offscreenImg.createGraphics();
		setVisible(true);
		width = (2*Main.BLOCKS_LEFT+1)*Main.BLOCK_WIDTH;
		height = (2*Main.BLOCKS_UP+1)*Main.BLOCK_WIDTH;
		setSize(getInsets().left+getInsets().right+width,getInsets().top+getInsets().bottom+height);
		setResizable(false);
	}
	
	@Override
	public void paint(Graphics g)
	{
		offscreenG.setColor(Color.white);
		offscreenG.fillRect(0, 0, width, height);
		g.drawImage(offscreenImg,getInsets().left,getInsets().top,this);
	}
	
	@Override
	public void update(Graphics g)
	{
		paint(g);
	}
}